--SQL problem involving Spotify's music data. 
--Our goal is to find the top 5 artists whose songs have appeared most frequently in the Top 10 of the global music charts. 
--We’ll be using three tables: artists, songs, and global_song_rank. 

/*
CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(100),
    label_owner VARCHAR(100)
);

INSERT INTO artists (artist_id, artist_name, label_owner) VALUES
(101, 'Ed Sheeran', 'Warner Music Group'),
(120, 'Drake', 'Warner Music Group'),
(125, 'Bad Bunny', 'Rimas Entertainment'),
(130, 'Lady Gaga', 'Interscope Records'),
(140, 'Katy Perry', 'Capitol Records');


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    artist_id INT,
    name VARCHAR(100)
);

INSERT INTO songs (song_id, artist_id, name) VALUES
(55511, 101, 'Perfect'),
(45202, 101, 'Shape of You'),
(22222, 120, 'One Dance'),
(19960, 120, 'Hotline Bling'),
(33333, 125, 'Dákiti'),
(44444, 125, 'Yonaguni'),
(55555, 130, 'Bad Romance'),
(66666, 130, 'Poker Face'),
(99999, 140, 'Roar'),
(101010, 140, 'Firework');
 

CREATE TABLE global_song_rank (
    day INT,
    song_id INT,
    rank INT
);

INSERT INTO global_song_rank (day, song_id, rank) VALUES
(1, 45202, 5),
(3, 45202, 2),
(1, 19960, 3),
(9, 19960, 6),
(1, 55511, 8),
(5, 22222, 7),
(2, 33333, 4),
(4, 44444, 8),
(6, 55555, 1),
(7, 66666, 10),
(5, 99999, 5);   */

--SELECT * from artists;
--SELECT * from global_song_rank order by day;
--select * from songs;

select artist_name, artist_rank from (
  select day,rank,s.song_id,a.artist_id,name,artist_name,label_owner, count(*),
  dense_rank() over(ORDER by COUNT(*) desc) as artist_rank
  from global_song_rank gs join songs s on gs.song_id=s.song_id 
  join artists a on a.artist_id=s.artist_id where rank <=10 
  GROUP by a.artist_id
) where artist_rank <=5
